- name: Install task requirements
  apt:
    update_cache: yes
    cache_valid_time: "{{APT_CACHE_VALID_TIME}}"
    state: present
    name:
      - rsync
      - git
      - subversion
      - unzip

- name: Check whether wp is installed
  stat: path={{wordpress_webroot}}/{{ wordpress_check_file }}
  register: wp_present

- name: Sync git repo for the site
  git:
    repo: "{{synced_wordpress.repo}}"
    dest: "{{wordpress_site_dir}}"
    version: "{{ synced_wordpress.branch|default('master') }}"
  when: synced_wordpress.repo is defined

- name: Install dependencies with Composer.
  shell: >
    composer install --prefer-source --no-interaction
    chdir={{ wordpress_site_dir }}
  when: wordpress_bedrock is defined

- name: Copy files in place
  synchronize: src={{wordpress_files}}/ dest={{wordpress_webroot}} delete=yes
  when: wp_present.stat.exists == false and wordpress_files is defined

- name: Set wp_new_site_name (1)
  set_fact:
    defined_new_site_name: "{{ synced_wordpress.new_site_name }}"
  when: synced_wordpress is defined and synced_wordpress.new_site_name is defined

- name: Set wp_new_site_name (2)
  set_fact:
    wp_new_site_name: "{{ defined_new_site_name|default(wordpress_db.site_name|default(site_name)) ~ local_test_environment|default('') }}"

- name: Install wordpress config file.
  template:
    src={{item}}
    dest={{ wordpress_config_path }}
  with_first_found:
        - files:
            - "{{wordpress_config_template}}"
          paths:
            - "{{wordpress_assets_path}}"
            - "../templates"
          skip: yes
  when: wordpress_config_template is defined

- name: Install Wordfence WAF file
  template:
    src: wordfence-waf.php.j2
    dest: "{{ wordfence_waf_path }}"
  when: wordfence_waf_path is defined
